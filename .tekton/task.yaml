apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: yeoman-nodejs
  namespace: gitea
spec:
  description: >-
    s2i-nodejs task clones a Git repository and builds and pushes a container
    image using S2I and a nodejs builder image.
  params:
    - default: latest
      description: The tag of nodejs imagestream for nodejs version
      name: VERSION
      type: string
    - default: .
      description: The location of the path to run s2i from.
      name: PATH_CONTEXT
      type: string
    - default: 'false'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: image-registry.openshift-image-registry.svc:5000/yeoman-nodejs-demo/yeoman-nodejs-demo
      description: Location of the repo where image has to be pushed
      name: IMAGE
      type: string
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:ac0b8714cc260c94435cab46fe41b3de0ccbc3d93e38c395fa9d52ac49e521fe
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: 'true'
      description: Skip pushing the built image
      name: SKIP_PUSH
      type: string
    - default: []
      description: Environment variables to set during _build-time_.
      name: ENV_VARS
      type: array
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
      type: string
  steps:
    - args:
        - '$(params.ENV_VARS[*])'
      env:
        - name: HOME
          value: /tekton/home
      image: >-
        registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:98d8cb3a255641ca6a1bce854e5e2460c20de9fb9b28e3cc67eb459f122873dd
      name: generate
      resources: {}
      script: >
        echo "Processing Build Environment Variables"

        echo "" > /env-vars/env-file

        for var in "$@"

        do
            echo "$var" >> /env-vars/env-file
        done


        s2i build $(params.PATH_CONTEXT)
        image-registry.openshift-image-registry.svc:5000/openshift/nodejs:$(params.VERSION)
        \

        --as-dockerfile /gen-source/Dockerfile.gen --environment-file
        /env-vars/env-file
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
        - mountPath: /env-vars
          name: env-vars
      workingDir: $(workspaces.output.path)
    - image: $(params.BUILDER_IMAGE)
      name: build-and-push
      resources: {}
      script: >
        buildah bud --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
           --layers -f /gen-source/Dockerfile.gen -t $(params.IMAGE) .
        
        yum install nodejs npm -y

        pwd

        cd $(workspaces.output.path)

        npm install

        npm config set registry https://gitea.apps.cluster-tl5tr.tl5tr.sandbox721.opentlc.com/api/packages/breda/npm/

        npm config set -- //gitea.apps.cluster-tl5tr.tl5tr.sandbox721.opentlc.com/api/packages/breda/npm/:_authToken="02811766fc70e5c4382d2eb3b5eed24617174001"

        npm publish

      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: env-vars
  workspaces:
    - mountPath: /workspace/output
      name: output
    - description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry. The file should be placed
        at the root of the Workspace with name config.json.
      name: dockerconfig
      optional: true
